module Trycourier
  module Models
    module Users
      type token_update_params =
        {
          user_id: String,
          patch: ::Array[Trycourier::Users::TokenUpdateParams::Patch]
        }
        & Trycourier::Internal::Type::request_parameters

      class TokenUpdateParams < Trycourier::Internal::Type::BaseModel
        extend Trycourier::Internal::Type::RequestParameters::Converter
        include Trycourier::Internal::Type::RequestParameters

        attr_accessor user_id: String

        attr_accessor patch: ::Array[Trycourier::Users::TokenUpdateParams::Patch]

        def initialize: (
          user_id: String,
          patch: ::Array[Trycourier::Users::TokenUpdateParams::Patch],
          ?request_options: Trycourier::request_opts
        ) -> void

        def to_hash: -> {
          user_id: String,
          patch: ::Array[Trycourier::Users::TokenUpdateParams::Patch],
          request_options: Trycourier::RequestOptions
        }

        type patch = { op: String, path: String, value: String? }

        class Patch < Trycourier::Internal::Type::BaseModel
          attr_accessor op: String

          attr_accessor path: String

          attr_accessor value: String?

          def initialize: (op: String, path: String, ?value: String?) -> void

          def to_hash: -> { op: String, path: String, value: String? }
        end
      end
    end
  end
end
