module Trycourier
  module Models
    type topic_preference =
      {
        default_status: Trycourier::Models::preference_status,
        status: Trycourier::Models::preference_status,
        topic_id: String,
        topic_name: String,
        custom_routing: ::Array[Trycourier::Models::channel_classification]?,
        has_custom_routing: bool?
      }

    class TopicPreference < Trycourier::Internal::Type::BaseModel
      attr_accessor default_status: Trycourier::Models::preference_status

      attr_accessor status: Trycourier::Models::preference_status

      attr_accessor topic_id: String

      attr_accessor topic_name: String

      attr_accessor custom_routing: ::Array[Trycourier::Models::channel_classification]?

      attr_accessor has_custom_routing: bool?

      def initialize: (
        default_status: Trycourier::Models::preference_status,
        status: Trycourier::Models::preference_status,
        topic_id: String,
        topic_name: String,
        ?custom_routing: ::Array[Trycourier::Models::channel_classification]?,
        ?has_custom_routing: bool?
      ) -> void

      def to_hash: -> {
        default_status: Trycourier::Models::preference_status,
        status: Trycourier::Models::preference_status,
        topic_id: String,
        topic_name: String,
        custom_routing: ::Array[Trycourier::Models::channel_classification]?,
        has_custom_routing: bool?
      }
    end
  end
end
