module Trycourier
  module Models
    type bulk_retrieve_job_response =
      { job: Trycourier::Models::BulkRetrieveJobResponse::Job }

    class BulkRetrieveJobResponse < Trycourier::Internal::Type::BaseModel
      attr_accessor job: Trycourier::Models::BulkRetrieveJobResponse::Job

      def initialize: (
        job: Trycourier::Models::BulkRetrieveJobResponse::Job
      ) -> void

      def to_hash: -> { job: Trycourier::Models::BulkRetrieveJobResponse::Job }

      type job =
        {
          definition: Trycourier::Models::inbound_bulk_message,
          enqueued: Integer,
          failures: Integer,
          received: Integer,
          status: Trycourier::Models::BulkRetrieveJobResponse::Job::status
        }

      class Job < Trycourier::Internal::Type::BaseModel
        attr_accessor definition: Trycourier::Models::inbound_bulk_message

        attr_accessor enqueued: Integer

        attr_accessor failures: Integer

        attr_accessor received: Integer

        attr_accessor status: Trycourier::Models::BulkRetrieveJobResponse::Job::status

        def initialize: (
          definition: Trycourier::Models::inbound_bulk_message,
          enqueued: Integer,
          failures: Integer,
          received: Integer,
          status: Trycourier::Models::BulkRetrieveJobResponse::Job::status
        ) -> void

        def to_hash: -> {
          definition: Trycourier::Models::inbound_bulk_message,
          enqueued: Integer,
          failures: Integer,
          received: Integer,
          status: Trycourier::Models::BulkRetrieveJobResponse::Job::status
        }

        type status = :CREATED | :PROCESSING | :COMPLETED | :ERROR

        module Status
          extend Trycourier::Internal::Type::Enum

          CREATED: :CREATED
          PROCESSING: :PROCESSING
          COMPLETED: :COMPLETED
          ERROR: :ERROR

          def self?.values: -> ::Array[Trycourier::Models::BulkRetrieveJobResponse::Job::status]
        end
      end
    end
  end
end
