module Courier
  module Models
    module Tenants
      type template_list_response =
        {
          has_more: bool,
          type: Courier::Models::Tenants::TemplateListResponse::type_,
          url: String,
          cursor: String?,
          items: ::Array[Courier::Models::Tenants::TemplateListResponse::Item]?,
          next_url: String?
        }

      class TemplateListResponse < Courier::Internal::Type::BaseModel
        attr_accessor has_more: bool

        attr_accessor type: Courier::Models::Tenants::TemplateListResponse::type_

        attr_accessor url: String

        attr_accessor cursor: String?

        attr_accessor items: ::Array[Courier::Models::Tenants::TemplateListResponse::Item]?

        attr_accessor next_url: String?

        def initialize: (
          has_more: bool,
          type: Courier::Models::Tenants::TemplateListResponse::type_,
          url: String,
          ?cursor: String?,
          ?items: ::Array[Courier::Models::Tenants::TemplateListResponse::Item]?,
          ?next_url: String?
        ) -> void

        def to_hash: -> {
          has_more: bool,
          type: Courier::Models::Tenants::TemplateListResponse::type_,
          url: String,
          cursor: String?,
          items: ::Array[Courier::Models::Tenants::TemplateListResponse::Item]?,
          next_url: String?
        }

        type type_ = :list

        module Type
          extend Courier::Internal::Type::Enum

          LIST: :list

          def self?.values: -> ::Array[Courier::Models::Tenants::TemplateListResponse::type_]
        end

        type item =
          {
            id: String,
            created_at: String,
            data: Courier::Models::Tenants::TemplateListResponse::Item::Data,
            published_at: String,
            updated_at: String,
            version: String
          }

        class Item < Courier::Internal::Type::BaseModel
          attr_accessor id: String

          attr_accessor created_at: String

          attr_accessor data: Courier::Models::Tenants::TemplateListResponse::Item::Data

          attr_accessor published_at: String

          attr_accessor updated_at: String

          attr_accessor version: String

          def initialize: (
            id: String,
            created_at: String,
            data: Courier::Models::Tenants::TemplateListResponse::Item::Data,
            published_at: String,
            updated_at: String,
            version: String
          ) -> void

          def to_hash: -> {
            id: String,
            created_at: String,
            data: Courier::Models::Tenants::TemplateListResponse::Item::Data,
            published_at: String,
            updated_at: String,
            version: String
          }

          type data = { routing: Courier::MessageRouting }

          class Data < Courier::Internal::Type::BaseModel
            attr_accessor routing: Courier::MessageRouting

            def initialize: (routing: Courier::MessageRouting) -> void

            def to_hash: -> { routing: Courier::MessageRouting }
          end
        end
      end
    end
  end
end
