module Courier
  module Models
    module Profiles
      type list_subscribe_params =
        { lists: ::Array[Courier::Profiles::ListSubscribeParams::List] }
        & Courier::Internal::Type::request_parameters

      class ListSubscribeParams < Courier::Internal::Type::BaseModel
        extend Courier::Internal::Type::RequestParameters::Converter
        include Courier::Internal::Type::RequestParameters

        attr_accessor lists: ::Array[Courier::Profiles::ListSubscribeParams::List]

        def initialize: (
          lists: ::Array[Courier::Profiles::ListSubscribeParams::List],
          ?request_options: Courier::request_opts
        ) -> void

        def to_hash: -> {
          lists: ::Array[Courier::Profiles::ListSubscribeParams::List],
          request_options: Courier::RequestOptions
        }

        type list =
          {
            list_id: String,
            preferences: Courier::Lists::RecipientPreferences?
          }

        class List < Courier::Internal::Type::BaseModel
          attr_accessor list_id: String

          attr_accessor preferences: Courier::Lists::RecipientPreferences?

          def initialize: (
            list_id: String,
            ?preferences: Courier::Lists::RecipientPreferences?
          ) -> void

          def to_hash: -> {
            list_id: String,
            preferences: Courier::Lists::RecipientPreferences?
          }
        end
      end
    end
  end
end
