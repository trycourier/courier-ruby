module Courier
  module Models
    type audit_event =
      {
        audit_event_id: String,
        source: String,
        timestamp: String,
        type: String,
        actor: Courier::AuditEvent::Actor?,
        target: Courier::AuditEvent::Target?
      }

    class AuditEvent < Courier::Internal::Type::BaseModel
      attr_accessor audit_event_id: String

      attr_accessor source: String

      attr_accessor timestamp: String

      attr_accessor type: String

      attr_accessor actor: Courier::AuditEvent::Actor?

      attr_accessor target: Courier::AuditEvent::Target?

      def initialize: (
        audit_event_id: String,
        source: String,
        timestamp: String,
        type: String,
        ?actor: Courier::AuditEvent::Actor?,
        ?target: Courier::AuditEvent::Target?
      ) -> void

      def to_hash: -> {
        audit_event_id: String,
        source: String,
        timestamp: String,
        type: String,
        actor: Courier::AuditEvent::Actor?,
        target: Courier::AuditEvent::Target?
      }

      type actor = { id: String?, email: String? }

      class Actor < Courier::Internal::Type::BaseModel
        attr_accessor id: String?

        attr_accessor email: String?

        def initialize: (?id: String?, ?email: String?) -> void

        def to_hash: -> { id: String?, email: String? }
      end

      type target = { id: String?, email: String? }

      class Target < Courier::Internal::Type::BaseModel
        attr_accessor id: String?

        attr_accessor email: String?

        def initialize: (?id: String?, ?email: String?) -> void

        def to_hash: -> { id: String?, email: String? }
      end
    end
  end
end
