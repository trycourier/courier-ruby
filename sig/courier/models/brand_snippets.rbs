module Courier
  module Models
    type brand_snippets = { items: ::Array[Courier::BrandSnippets::Item]? }

    class BrandSnippets < Courier::Internal::Type::BaseModel
      attr_accessor items: ::Array[Courier::BrandSnippets::Item]?

      def initialize: (?items: ::Array[Courier::BrandSnippets::Item]?) -> void

      def to_hash: -> { items: ::Array[Courier::BrandSnippets::Item]? }

      type item = { name: String, value: String }

      class Item < Courier::Internal::Type::BaseModel
        attr_accessor name: String

        attr_accessor value: String

        def initialize: (name: String, value: String) -> void

        def to_hash: -> { name: String, value: String }
      end
    end
  end
end
