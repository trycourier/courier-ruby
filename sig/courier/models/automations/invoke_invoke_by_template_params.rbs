module Courier
  module Models
    module Automations
      type invoke_invoke_by_template_params =
        {
          recipient: String?,
          brand: String?,
          data: ::Hash[Symbol, top]?,
          profile: ::Hash[Symbol, top]?,
          template: String?
        }
        & Courier::Internal::Type::request_parameters

      class InvokeInvokeByTemplateParams < Courier::Internal::Type::BaseModel
        extend Courier::Internal::Type::RequestParameters::Converter
        include Courier::Internal::Type::RequestParameters

        attr_accessor recipient: String?

        attr_accessor brand: String?

        attr_accessor data: ::Hash[Symbol, top]?

        attr_accessor profile: ::Hash[Symbol, top]?

        attr_accessor template: String?

        def initialize: (
          recipient: String?,
          ?brand: String?,
          ?data: ::Hash[Symbol, top]?,
          ?profile: ::Hash[Symbol, top]?,
          ?template: String?,
          ?request_options: Courier::request_opts
        ) -> void

        def to_hash: -> {
          recipient: String?,
          brand: String?,
          data: ::Hash[Symbol, top]?,
          profile: ::Hash[Symbol, top]?,
          template: String?,
          request_options: Courier::RequestOptions
        }
      end
    end
  end
end
