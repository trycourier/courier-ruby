module Courier
  module Models
    type recipient = Courier::UserRecipient | Courier::Recipient::ListRecipient

    module Recipient
      extend Courier::Internal::Type::Union

      type list_recipient = { data: ::Hash[Symbol, top]?, list_id: String? }

      class ListRecipient < Courier::Internal::Type::BaseModel
        attr_accessor data: ::Hash[Symbol, top]?

        attr_accessor list_id: String?

        def initialize: (?data: ::Hash[Symbol, top]?, ?list_id: String?) -> void

        def to_hash: -> { data: ::Hash[Symbol, top]?, list_id: String? }
      end

      def self?.variants: -> ::Array[Courier::Models::recipient]
    end
  end
end
