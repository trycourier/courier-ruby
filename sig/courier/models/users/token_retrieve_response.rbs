module Courier
  module Models
    module Users
      type token_retrieve_response =
        {
          status: Courier::Models::Users::TokenRetrieveResponse::status?,
          status_reason: String?
        }

      class TokenRetrieveResponse < Courier::Models::UserToken
        def status: -> Courier::Models::Users::TokenRetrieveResponse::status?

        def status=: (
          Courier::Models::Users::TokenRetrieveResponse::status? _
        ) -> Courier::Models::Users::TokenRetrieveResponse::status?

        def status_reason: -> String?

        def status_reason=: (String? _) -> String?

        def initialize: (
          ?status: Courier::Models::Users::TokenRetrieveResponse::status?,
          ?status_reason: String?
        ) -> void

        def to_hash: -> {
          status: Courier::Models::Users::TokenRetrieveResponse::status?,
          status_reason: String?
        }

        type status = :active | :unknown | :failed | :revoked

        module Status
          extend Courier::Internal::Type::Enum

          ACTIVE: :active
          UNKNOWN: :unknown
          FAILED: :failed
          REVOKED: :revoked

          def self?.values: -> ::Array[Courier::Models::Users::TokenRetrieveResponse::status]
        end
      end
    end
  end
end
