module Courier
  module Models
    type subscription_topic_new =
      {
        status: Courier::Models::SubscriptionTopicNew::status,
        custom_routing: ::Array[Courier::Models::channel_classification]?,
        has_custom_routing: bool?
      }

    class SubscriptionTopicNew < Courier::Internal::Type::BaseModel
      attr_accessor status: Courier::Models::SubscriptionTopicNew::status

      attr_accessor custom_routing: ::Array[Courier::Models::channel_classification]?

      attr_accessor has_custom_routing: bool?

      def initialize: (
        status: Courier::Models::SubscriptionTopicNew::status,
        ?custom_routing: ::Array[Courier::Models::channel_classification]?,
        ?has_custom_routing: bool?
      ) -> void

      def to_hash: -> {
        status: Courier::Models::SubscriptionTopicNew::status,
        custom_routing: ::Array[Courier::Models::channel_classification]?,
        has_custom_routing: bool?
      }

      type status = :OPTED_OUT | :OPTED_IN | :REQUIRED

      module Status
        extend Courier::Internal::Type::Enum

        OPTED_OUT: :OPTED_OUT
        OPTED_IN: :OPTED_IN
        REQUIRED: :REQUIRED

        def self?.values: -> ::Array[Courier::Models::SubscriptionTopicNew::status]
      end
    end
  end
end
