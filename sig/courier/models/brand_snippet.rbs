module Courier
  module Models
    type brand_snippet =
      {
        format_: Courier::Models::BrandSnippet::format_,
        name: String,
        value: String
      }

    class BrandSnippet < Courier::Internal::Type::BaseModel
      attr_accessor format_: Courier::Models::BrandSnippet::format_

      attr_accessor name: String

      attr_accessor value: String

      def initialize: (
        format_: Courier::Models::BrandSnippet::format_,
        name: String,
        value: String
      ) -> void

      def to_hash: -> {
        format_: Courier::Models::BrandSnippet::format_,
        name: String,
        value: String
      }

      type format_ = :handlebars

      module Format
        extend Courier::Internal::Type::Enum

        HANDLEBARS: :handlebars

        def self?.values: -> ::Array[Courier::Models::BrandSnippet::format_]
      end
    end
  end
end
