module Courier
  module Models
    type inbound_bulk_message =
      {
        brand: String?,
        data: ::Hash[Symbol, top]?,
        event: String?,
        locale: ::Hash[Symbol, top]?,
        message: Courier::Models::InboundBulkMessage::message?,
        override: top
      }

    class InboundBulkMessage < Courier::Internal::Type::BaseModel
      attr_accessor brand: String?

      attr_accessor data: ::Hash[Symbol, top]?

      attr_accessor event: String?

      attr_accessor locale: ::Hash[Symbol, top]?

      attr_accessor message: Courier::Models::InboundBulkMessage::message?

      attr_reader override: top?

      def override=: (top) -> top

      def initialize: (
        ?brand: String?,
        ?data: ::Hash[Symbol, top]?,
        ?event: String?,
        ?locale: ::Hash[Symbol, top]?,
        ?message: Courier::Models::InboundBulkMessage::message?,
        ?override: top
      ) -> void

      def to_hash: -> {
        brand: String?,
        data: ::Hash[Symbol, top]?,
        event: String?,
        locale: ::Hash[Symbol, top]?,
        message: Courier::Models::InboundBulkMessage::message?,
        override: top
      }

      type message =
        Courier::InboundBulkMessage::Message::InboundBulkTemplateMessage
        | Courier::InboundBulkMessage::Message::InboundBulkContentMessage

      module Message
        extend Courier::Internal::Type::Union

        type inbound_bulk_template_message = { template: String }

        class InboundBulkTemplateMessage < Courier::Models::BaseMessage
          def template: -> String

          def template=: (String _) -> String

          def initialize: (template: String) -> void

          def to_hash: -> { template: String }
        end

        type inbound_bulk_content_message =
          { content: Courier::Models::content }

        class InboundBulkContentMessage < Courier::Models::BaseMessage
          def content: -> Courier::Models::content

          def content=: (Courier::Models::content _) -> Courier::Models::content

          def initialize: (content: Courier::Models::content) -> void

          def to_hash: -> { content: Courier::Models::content }
        end

        def self?.variants: -> ::Array[Courier::Models::InboundBulkMessage::message]
      end
    end
  end
end
