module Courier
  module Models
    module Lists
      type notification_preference_details =
        {
          status: Courier::Models::Users::preference_status,
          channel_preferences: ::Array[Courier::ChannelPreference]?,
          rules: ::Array[Courier::Rule]?
        }

      class NotificationPreferenceDetails < Courier::Internal::Type::BaseModel
        attr_accessor status: Courier::Models::Users::preference_status

        attr_accessor channel_preferences: ::Array[Courier::ChannelPreference]?

        attr_accessor rules: ::Array[Courier::Rule]?

        def initialize: (
          status: Courier::Models::Users::preference_status,
          ?channel_preferences: ::Array[Courier::ChannelPreference]?,
          ?rules: ::Array[Courier::Rule]?
        ) -> void

        def to_hash: -> {
          status: Courier::Models::Users::preference_status,
          channel_preferences: ::Array[Courier::ChannelPreference]?,
          rules: ::Array[Courier::Rule]?
        }
      end
    end
  end
end
