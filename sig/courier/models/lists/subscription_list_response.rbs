module Courier
  module Models
    module Lists
      type subscription_list_response =
        {
          items: ::Array[Courier::Models::Lists::SubscriptionListResponse::Item],
          paging: Courier::Paging
        }

      class SubscriptionListResponse < Courier::Internal::Type::BaseModel
        attr_accessor items: ::Array[Courier::Models::Lists::SubscriptionListResponse::Item]

        attr_accessor paging: Courier::Paging

        def initialize: (
          items: ::Array[Courier::Models::Lists::SubscriptionListResponse::Item],
          paging: Courier::Paging
        ) -> void

        def to_hash: -> {
          items: ::Array[Courier::Models::Lists::SubscriptionListResponse::Item],
          paging: Courier::Paging
        }

        type item =
          {
            recipient_id: String,
            created: String?,
            preferences: Courier::Lists::RecipientPreferences?
          }

        class Item < Courier::Internal::Type::BaseModel
          attr_accessor recipient_id: String

          attr_accessor created: String?

          attr_accessor preferences: Courier::Lists::RecipientPreferences?

          def initialize: (
            recipient_id: String,
            ?created: String?,
            ?preferences: Courier::Lists::RecipientPreferences?
          ) -> void

          def to_hash: -> {
            recipient_id: String,
            created: String?,
            preferences: Courier::Lists::RecipientPreferences?
          }
        end
      end
    end
  end
end
