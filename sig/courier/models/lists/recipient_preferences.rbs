module Courier
  module Models
    module Lists
      type recipient_preferences =
        {
          categories: ::Hash[Symbol, Courier::Lists::NotificationPreferenceDetails]?,
          notifications: ::Hash[Symbol, Courier::Lists::NotificationPreferenceDetails]?
        }

      class RecipientPreferences < Courier::Internal::Type::BaseModel
        attr_accessor categories: ::Hash[Symbol, Courier::Lists::NotificationPreferenceDetails]?

        attr_accessor notifications: ::Hash[Symbol, Courier::Lists::NotificationPreferenceDetails]?

        def initialize: (
          ?categories: ::Hash[Symbol, Courier::Lists::NotificationPreferenceDetails]?,
          ?notifications: ::Hash[Symbol, Courier::Lists::NotificationPreferenceDetails]?
        ) -> void

        def to_hash: -> {
          categories: ::Hash[Symbol, Courier::Lists::NotificationPreferenceDetails]?,
          notifications: ::Hash[Symbol, Courier::Lists::NotificationPreferenceDetails]?
        }
      end
    end
  end
end
